name: UI Automation Pipeline

on:
  workflow_dispatch:
    inputs:
      Branch:
        description: "Please enter the branch name"
        default: "main"
        required: true
      Select_Environment:
        description: "Select the Environment which you want to test"
        required: true
        type: choice
        options:
          - "https://frost-dev.health.elsevier.com/"
          - "https://frost-cert.health.elsevier.com/"
          - "https://frost-stage.health.elsevier.com/"
          - "https://frost-prod.health.elsevier.com/"
      Frost_Username:
        description: "Please enter the username"
        required: true
      Frost_Password:
        description: "Please enter the encrypted password"
        required: true
      Select_Browser:
        description: "Select the browser on which you want to run test"
        required: true
        type: choice
        options:
          - "FireFox"
          - "Chrome"
      Select_Group:
        description: "Select the test group/name you want to run"
        default: ""
        required: false
      Parallel_Execution:
        description: "Select 'Yes' if you want to run test cases in Parallel Mode"
        required: true
        type: choice
        options:
          - "No"
          - "Yes"
      Parallel_Execution_Mode:
        description: "Please select the Parallel Execution Mode. Must be 'NONE' if Parallel Execution is 'No'"
        default: "NONE"
        required: true
        type: choice
        options:
          - "CLASSES"
          - "METHODS"
          - "INSTANCES"
          - "TESTS"
          - "NONE"
      Parallel_Execution_Thread_Count:
        description: "Please select the Parallel Execution Thread Count. Must be '1' if Parallel Execution is 'No'"
        default: "1"
        required: true
        type: choice
        options:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"

jobs:
  test-automation:
    runs-on: ubuntu-latest

    env:
      APPLICATION_URL: ${{ inputs.Select_Environment }}
      FROST_USERNAME: ${{ inputs.Frost_Username }}
      FROST_PASSWORD: ${{ inputs.Frost_Password }}
      BROWSER: ${{ inputs.Select_Browser }}
      GROUPS: ${{ inputs.Select_Group }}
      PARALLEL_EXECUTION: ${{ inputs.Parallel_Execution }}
      PARALLEL_EXECUTION_MODE: ${{ inputs.Parallel_Execution_Mode }}
      PARALLEL_EXECUTION_THREAD_COUNT: ${{ inputs.Parallel_Execution_Thread_Count }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.Branch }}

    - name: Set Up Java
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: adopt

    - name: Install Maven
      run: sudo apt-get install -y maven

    - name: Set Environment and Build
      run: |
        ENVIRONMENT_NAME=$(echo "${{ inputs.Select_Environment }}" | sed -E 's|https://frost-([a-z]+).health.elsevier.com/|\1|' | tr '[:lower:]' '[:upper:]')
        START_TIME=$(date -u)
        echo "::notice title=Environment Details::Environment: $ENVIRONMENT_NAME, URL: ${{ inputs.Select_Environment }}, Browser: ${{ inputs.Select_Browser }}"
        echo "### 🧪 Test Execution Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: $ENVIRONMENT_NAME" >> $GITHUB_STEP_SUMMARY
        echo "- **URL**: ${{ inputs.Select_Environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Browser**: ${{ inputs.Select_Browser }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Start Time**: $START_TIME" >> $GITHUB_STEP_SUMMARY
        echo "START_TIME=$START_TIME" >> $GITHUB_ENV
        mvn compile

    - name: Test Execution
      run: |
        mvn test \
          -Dapplication.url=${{ env.APPLICATION_URL }} \
          -Dusername=${{ env.FROST_USERNAME }} \
          -Dpassword=${{ env.FROST_PASSWORD }} \
          -Dbrowser=${{ env.BROWSER }} \
          -Dgroups=${{ env.GROUPS }} \
          -Dparallel.execution=${{ env.PARALLEL_EXECUTION }} \
          -Dparallel.execution.mode=${{ env.PARALLEL_EXECUTION_MODE }} \
          -Dparallel.execution.thread.count=${{ env.PARALLEL_EXECUTION_THREAD_COUNT }}
      continue-on-error: true

    - name: Generate Reports
      run: |
        mkdir -p TestReports
        mv target/surefire-reports/testng-results.xml TestReports/ || true
        mv target/surefire-reports/*.html TestReports/ || true

    - name: Upload HTML Report
      uses: actions/upload-artifact@v4
      with:
          name: TestNG-Report
          path: target/surefire-reports/emailable-report.html

    - name: Display Test Summary in GitHub UI
      run: |
        passed=$(grep -oP 'passed="\K[0-9]+' TestReports/testng-results.xml || echo "0")
        failed=$(grep -oP 'failed="\K[0-9]+' TestReports/testng-results.xml || echo "0")
        skipped=$(grep -oP 'skipped="\K[0-9]+' TestReports/testng-results.xml || echo "0")
        END_TIME=$(date -u)

        echo "### ✅ TestNG Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Passed: $passed" >> $GITHUB_STEP_SUMMARY
        echo "- ❌ Failed: $failed" >> $GITHUB_STEP_SUMMARY
        echo "- ⚠️ Skipped: $skipped" >> $GITHUB_STEP_SUMMARY
        echo "- **End Time**: $END_TIME" >> $GITHUB_STEP_SUMMARY
        echo "- **Report**: [View HTML Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.html)" >> $GITHUB_STEP_SUMMARY

        chmod +x ./generate-ga-summary.sh
          ./generate-ga-summary.sh target/surefire-reports/emailable-report.html

    - name: Deploy Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./TestReports
